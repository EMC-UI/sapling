<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="8" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="configTest_OVA" duration-ms="58307" started-at="2016-08-24T19:32:37Z" finished-at="2016-08-24T19:33:35Z">
    <groups>
    </groups>
    <test name="LogIn" duration-ms="2435" started-at="2016-08-24T19:32:37Z" finished-at="2016-08-24T19:32:40Z">
      <class name="core.tests.BaseTest">
        <test-method status="PASS" signature="login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, boolean)[pri:0, instance:core.tests.BaseTest@3532ec19]" name="login" duration-ms="2401" started-at="2016-08-24T12:32:37Z" finished-at="2016-08-24T12:32:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/api/v1/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ACME]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[application/json]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
      </class> <!-- core.tests.BaseTest -->
    </test> <!-- LogIn -->
    <test name="Get all time zones" duration-ms="957" started-at="2016-08-24T19:32:40Z" finished-at="2016-08-24T19:32:40Z">
      <class name="sysmgr.tests.TestNgAutomation">
        <test-method status="PASS" signature="getTimezones(java.lang.String, java.lang.String, int, boolean, boolean, java.lang.String)[pri:0, instance:sysmgr.tests.TestNgAutomation@59494225]" name="getTimezones" duration-ms="954" started-at="2016-08-24T12:32:40Z" finished-at="2016-08-24T12:32:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/api/v1/timezones]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[application/json]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Africa/Abidjan, Africa/Accra, Africa/Addis_Ababa, Africa/Algiers, Africa/Asmara, Africa/Asmera, Africa/Bamako, Africa/Bangui, Africa/Banjul, Africa/Bissau, Africa/Blantyre, Africa/Brazzaville, Africa/Bujumbura, Africa/Cairo, Africa/Casablanca, Africa/Ceuta, Africa/Conakry, Africa/Dakar, Africa/Dar_es_Salaam, Africa/Djibouti, Africa/Douala, Africa/El_Aaiun, Africa/Freetown, Africa/Gaborone, Africa/Harare, Africa/Johannesburg, Africa/Juba, Africa/Kampala, Africa/Khartoum, Africa/Kigali, Africa/Kinshasa, Africa/Lagos, Africa/Libreville, Africa/Lome, Africa/Luanda, Africa/Lubumbashi, Africa/Lusaka, Africa/Malabo, Africa/Maputo, Africa/Maseru, Africa/Mbabane, Africa/Mogadishu, Africa/Monrovia, Africa/Nairobi, Africa/Ndjamena, Africa/Niamey, Africa/Nouakchott, Africa/Ouagadougou, Africa/Porto-Novo, Africa/Sao_Tome, Africa/Timbuktu, Africa/Tripoli, Africa/Tunis, Africa/Windhoek, America/Adak, America/Anchorage, America/Anguilla, America/Antigua, America/Araguaina, America/Argentina/Buenos_Aires, America/Argentina/Catamarca, America/Argentina/ComodRivadavia, America/Argentina/Cordoba, America/Argentina/Jujuy, America/Argentina/La_Rioja, America/Argentina/Mendoza, America/Argentina/Rio_Gallegos, America/Argentina/Salta, America/Argentina/San_Juan, America/Argentina/San_Luis, America/Argentina/Tucuman, America/Argentina/Ushuaia, America/Aruba, America/Asuncion, America/Atikokan, America/Atka, America/Bahia, America/Bahia_Banderas, America/Barbados, America/Belem, America/Belize, America/Blanc-Sablon, America/Boa_Vista, America/Bogota, America/Boise, America/Buenos_Aires, America/Cambridge_Bay, America/Campo_Grande, America/Cancun, America/Caracas, America/Catamarca, America/Cayenne, America/Cayman, America/Chicago, America/Chihuahua, America/Coral_Harbour, America/Cordoba, America/Costa_Rica, America/Creston, America/Cuiaba, America/Curacao, America/Danmarkshavn, America/Dawson, America/Dawson_Creek, America/Denver, America/Detroit, America/Dominica, America/Edmonton, America/Eirunepe, America/El_Salvador, America/Ensenada, America/Fort_Wayne, America/Fortaleza, America/Glace_Bay, America/Godthab, America/Goose_Bay, America/Grand_Turk, America/Grenada, America/Guadeloupe, America/Guatemala, America/Guayaquil, America/Guyana, America/Halifax, America/Havana, America/Hermosillo, America/Indiana/Indianapolis, America/Indiana/Knox, America/Indiana/Marengo, America/Indiana/Petersburg, America/Indiana/Tell_City, America/Indiana/Vevay, America/Indiana/Vincennes, America/Indiana/Winamac, America/Indianapolis, America/Inuvik, America/Iqaluit, America/Jamaica, America/Jujuy, America/Juneau, America/Kentucky/Louisville, America/Kentucky/Monticello, America/Knox_IN, America/Kralendijk, America/La_Paz, America/Lima, America/Los_Angeles, America/Louisville, America/Lower_Princes, America/Maceio, America/Managua, America/Manaus, America/Marigot, America/Martinique, America/Matamoros, America/Mazatlan, America/Mendoza, America/Menominee, America/Merida, America/Metlakatla, America/Mexico_City, America/Miquelon, America/Moncton, America/Monterrey, America/Montevideo, America/Montreal, America/Montserrat, America/Nassau, America/New_York, America/Nipigon, America/Nome, America/Noronha, America/North_Dakota/Beulah, America/North_Dakota/Center, America/North_Dakota/New_Salem, America/Ojinaga, America/Panama, America/Pangnirtung, America/Paramaribo, America/Phoenix, America/Port-au-Prince, America/Port_of_Spain, America/Porto_Acre, America/Porto_Velho, America/Puerto_Rico, America/Rainy_River, America/Rankin_Inlet, America/Recife, America/Regina, America/Resolute, America/Rio_Branco, America/Rosario, America/Santa_Isabel, America/Santarem, America/Santiago, America/Santo_Domingo, America/Sao_Paulo, America/Scoresbysund, America/Shiprock, America/Sitka, America/St_Barthelemy, America/St_Johns, America/St_Kitts, America/St_Lucia, America/St_Thomas, America/St_Vincent, America/Swift_Current, America/Tegucigalpa, America/Thule, America/Thunder_Bay, America/Tijuana, America/Toronto, America/Tortola, America/Vancouver, America/Virgin, America/Whitehorse, America/Winnipeg, America/Yakutat, America/Yellowknife, Antarctica/Casey, Antarctica/Davis, Antarctica/DumontDUrville, Antarctica/Macquarie, Antarctica/Mawson, Antarctica/McMurdo, Antarctica/Palmer, Antarctica/Rothera, Antarctica/South_Pole, Antarctica/Syowa, Antarctica/Troll, Antarctica/Vostok, Arctic/Longyearbyen, Asia/Aden, Asia/Almaty, Asia/Amman, Asia/Anadyr, Asia/Aqtau, Asia/Aqtobe, Asia/Ashgabat, Asia/Ashkhabad, Asia/Baghdad, Asia/Bahrain, Asia/Baku, Asia/Bangkok, Asia/Beirut, Asia/Bishkek, Asia/Brunei, Asia/Calcutta, Asia/Chita, Asia/Choibalsan, Asia/Chongqing, Asia/Chungking, Asia/Colombo, Asia/Dacca, Asia/Damascus, Asia/Dhaka, Asia/Dili, Asia/Dubai, Asia/Dushanbe, Asia/Gaza, Asia/Harbin, Asia/Hebron, Asia/Ho_Chi_Minh, Asia/Hong_Kong, Asia/Hovd, Asia/Irkutsk, Asia/Istanbul, Asia/Jakarta, Asia/Jayapura, Asia/Jerusalem, Asia/Kabul, Asia/Kamchatka, Asia/Karachi, Asia/Kashgar, Asia/Kathmandu, Asia/Katmandu, Asia/Khandyga, Asia/Kolkata, Asia/Krasnoyarsk, Asia/Kuala_Lumpur, Asia/Kuching, Asia/Kuwait, Asia/Macao, Asia/Macau, Asia/Magadan, Asia/Makassar, Asia/Manila, Asia/Muscat, Asia/Nicosia, Asia/Novokuznetsk, Asia/Novosibirsk, Asia/Omsk, Asia/Oral, Asia/Phnom_Penh, Asia/Pontianak, Asia/Pyongyang, Asia/Qatar, Asia/Qyzylorda, Asia/Rangoon, Asia/Riyadh, Asia/Saigon, Asia/Sakhalin, Asia/Samarkand, Asia/Seoul, Asia/Shanghai, Asia/Singapore, Asia/Srednekolymsk, Asia/Taipei, Asia/Tashkent, Asia/Tbilisi, Asia/Tehran, Asia/Tel_Aviv, Asia/Thimbu, Asia/Thimphu, Asia/Tokyo, Asia/Ujung_Pandang, Asia/Ulaanbaatar, Asia/Ulan_Bator, Asia/Urumqi, Asia/Ust-Nera, Asia/Vientiane, Asia/Vladivostok, Asia/Yakutsk, Asia/Yekaterinburg, Asia/Yerevan, Atlantic/Azores, Atlantic/Bermuda, Atlantic/Canary, Atlantic/Cape_Verde, Atlantic/Faeroe, Atlantic/Faroe, Atlantic/Jan_Mayen, Atlantic/Madeira, Atlantic/Reykjavik, Atlantic/South_Georgia, Atlantic/St_Helena, Atlantic/Stanley, Australia/ACT, Australia/Adelaide, Australia/Brisbane, Australia/Broken_Hill, Australia/Canberra, Australia/Currie, Australia/Darwin, Australia/Eucla, Australia/Hobart, Australia/LHI, Australia/Lindeman, Australia/Lord_Howe, Australia/Melbourne, Australia/NSW, Australia/North, Australia/Perth, Australia/Queensland, Australia/South, Australia/Sydney, Australia/Tasmania, Australia/Victoria, Australia/West, Australia/Yancowinna, Brazil/Acre, Brazil/DeNoronha, Brazil/East, Brazil/West, CET, CST6CDT, Canada/Atlantic, Canada/Central, Canada/East-Saskatchewan, Canada/Eastern, Canada/Mountain, Canada/Newfoundland, Canada/Pacific, Canada/Saskatchewan, Canada/Yukon, Chile/Continental, Chile/EasterIsland, Cuba, EET, EST5EDT, Egypt, Eire, Etc/GMT, Etc/GMT+0, Etc/GMT+1, Etc/GMT+10, Etc/GMT+11, Etc/GMT+12, Etc/GMT+2, Etc/GMT+3, Etc/GMT+4, Etc/GMT+5, Etc/GMT+6, Etc/GMT+7, Etc/GMT+8, Etc/GMT+9, Etc/GMT-0, Etc/GMT-1, Etc/GMT-10, Etc/GMT-11, Etc/GMT-12, Etc/GMT-13, Etc/GMT-14, Etc/GMT-2, Etc/GMT-3, Etc/GMT-4, Etc/GMT-5, Etc/GMT-6, Etc/GMT-7, Etc/GMT-8, Etc/GMT-9, Etc/GMT0, Etc/Greenwich, Etc/UCT, Etc/UTC, Etc/Universal, Etc/Zulu, Europe/Amsterdam, Europe/Andorra, Europe/Athens, Europe/Belfast, Europe/Belgrade, Europe/Berlin, Europe/Bratislava, Europe/Brussels, Europe/Bucharest, Europe/Budapest, Europe/Busingen, Europe/Chisinau, Europe/Copenhagen, Europe/Dublin, Europe/Gibraltar, Europe/Guernsey, Europe/Helsinki, Europe/Isle_of_Man, Europe/Istanbul, Europe/Jersey, Europe/Kaliningrad, Europe/Kiev, Europe/Lisbon, Europe/Ljubljana, Europe/London, Europe/Luxembourg, Europe/Madrid, Europe/Malta, Europe/Mariehamn, Europe/Minsk, Europe/Monaco, Europe/Moscow, Europe/Nicosia, Europe/Oslo, Europe/Paris, Europe/Podgorica, Europe/Prague, Europe/Riga, Europe/Rome, Europe/Samara, Europe/San_Marino, Europe/Sarajevo, Europe/Simferopol, Europe/Skopje, Europe/Sofia, Europe/Stockholm, Europe/Tallinn, Europe/Tirane, Europe/Tiraspol, Europe/Uzhgorod, Europe/Vaduz, Europe/Vatican, Europe/Vienna, Europe/Vilnius, Europe/Volgograd, Europe/Warsaw, Europe/Zagreb, Europe/Zaporozhye, Europe/Zurich, GB, GB-Eire, GMT, GMT0, Greenwich, Hongkong, Iceland, Indian/Antananarivo, Indian/Chagos, Indian/Christmas, Indian/Cocos, Indian/Comoro, Indian/Kerguelen, Indian/Mahe, Indian/Maldives, Indian/Mauritius, Indian/Mayotte, Indian/Reunion, Iran, Israel, Jamaica, Japan, Kwajalein, Libya, MET, MST7MDT, Mexico/BajaNorte, Mexico/BajaSur, Mexico/General, NZ, NZ-CHAT, Navajo, PRC, PST8PDT, Pacific/Apia, Pacific/Auckland, Pacific/Bougainville, Pacific/Chatham, Pacific/Chuuk, Pacific/Easter, Pacific/Efate, Pacific/Enderbury, Pacific/Fakaofo, Pacific/Fiji, Pacific/Funafuti, Pacific/Galapagos, Pacific/Gambier, Pacific/Guadalcanal, Pacific/Guam, Pacific/Honolulu, Pacific/Johnston, Pacific/Kiritimati, Pacific/Kosrae, Pacific/Kwajalein, Pacific/Majuro, Pacific/Marquesas, Pacific/Midway, Pacific/Nauru, Pacific/Niue, Pacific/Norfolk, Pacific/Noumea, Pacific/Pago_Pago, Pacific/Palau, Pacific/Pitcairn, Pacific/Pohnpei, Pacific/Ponape, Pacific/Port_Moresby, Pacific/Rarotonga, Pacific/Saipan, Pacific/Samoa, Pacific/Tahiti, Pacific/Tarawa, Pacific/Tongatapu, Pacific/Truk, Pacific/Wake, Pacific/Wallis, Pacific/Yap, Poland, Portugal, ROK, Singapore, Turkey, UCT, US/Alaska, US/Aleutian, US/Arizona, US/Central, US/East-Indiana, US/Eastern, US/Hawaii, US/Indiana-Starke, US/Michigan, US/Mountain, US/Pacific, US/Pacific-New, US/Samoa, UTC, Universal, W-SU, WET, Zulu, EST, HST, MST, America/Fort_Nelson]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTimezones -->
      </class> <!-- sysmgr.tests.TestNgAutomation -->
    </test> <!-- Get all time zones -->
    <test name="Get node By Id for single node" duration-ms="1271" started-at="2016-08-24T19:32:40Z" finished-at="2016-08-24T19:32:42Z">
      <class name="sysmgr.tests.TestNgAutomation">
        <test-method status="PASS" signature="getNodeById(java.lang.String, java.lang.String, int, boolean, int, java.lang.String, boolean)[pri:0, instance:sysmgr.tests.TestNgAutomation@4566e5bd]" name="getNodeById" duration-ms="1267" started-at="2016-08-24T12:32:40Z" finished-at="2016-08-24T12:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/api/v1/system/nodes/{nodeId}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[application/json]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[120]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[PENDING]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNodeById -->
      </class> <!-- sysmgr.tests.TestNgAutomation -->
    </test> <!-- Get node By Id for single node -->
    <test name="Get Eulas by Id" duration-ms="436" started-at="2016-08-24T19:32:42Z" finished-at="2016-08-24T19:32:42Z">
      <class name="sysmgr.tests.TestNgAutomation">
        <test-method status="PASS" signature="getEulaById(java.lang.String, java.lang.String, int, boolean, boolean, java.lang.String)[pri:0, instance:sysmgr.tests.TestNgAutomation@4b952a2d]" name="getEulaById" duration-ms="431" started-at="2016-08-24T12:32:42Z" finished-at="2016-08-24T12:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/api/v1/system/nodes/{nodeId}/eulas/{eulaId}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[application/json]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[SOFTWARE LICENSE AND MAINTENANCE AGREEMENT]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEulaById -->
      </class> <!-- sysmgr.tests.TestNgAutomation -->
    </test> <!-- Get Eulas by Id -->
    <test name="Get configuration by ID for single node" duration-ms="259" started-at="2016-08-24T19:32:42Z" finished-at="2016-08-24T19:32:42Z">
      <class name="sysmgr.tests.TestNgAutomation">
        <test-method status="PASS" signature="getConfigurationById(java.lang.String, java.lang.String, int, boolean, java.lang.String)[pri:0, instance:sysmgr.tests.TestNgAutomation@6adede5]" name="getConfigurationById" duration-ms="257" started-at="2016-08-24T12:32:42Z" finished-at="2016-08-24T12:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/api/v1/system/nodes/{nodeId}/configurations/{configurationId}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[application/json]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[PST8PDT]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getConfigurationById -->
      </class> <!-- sysmgr.tests.TestNgAutomation -->
    </test> <!-- Get configuration by ID for single node -->
    <test name="Get config status before deployment" duration-ms="135" started-at="2016-08-24T19:32:42Z" finished-at="2016-08-24T19:32:43Z">
      <class name="sysmgr.tests.TestNgAutomation">
        <test-method status="PASS" signature="getConfigStatus(java.lang.String, java.lang.String, int, boolean, int, int, java.lang.String, java.lang.String)[pri:0, instance:sysmgr.tests.TestNgAutomation@64bfbc86]" name="getConfigStatus" duration-ms="129" started-at="2016-08-24T12:32:42Z" finished-at="2016-08-24T12:32:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/api/v1/system/nodes/{nodeId}/configurations/{configurationId}/configStatus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[application/json]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[120]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[EMC eCDM install is pending]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getConfigStatus -->
      </class> <!-- sysmgr.tests.TestNgAutomation -->
    </test> <!-- Get config status before deployment -->
    <test name="Configure new eCDM system" duration-ms="52545" started-at="2016-08-24T19:32:43Z" finished-at="2016-08-24T19:33:35Z">
      <class name="sysmgr.tests.TestNgAutomation">
        <test-method status="PASS" signature="configureNewEcdmSystem(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:sysmgr.tests.TestNgAutomation@6e1ec318]" name="configureNewEcdmSystem" duration-ms="52543" started-at="2016-08-24T12:32:43Z" finished-at="2016-08-24T12:33:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/api/v1/system/nodes/{nodeId}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qaLandlord]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[America/Los_Angeles]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Changeme@1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureNewEcdmSystem -->
      </class> <!-- sysmgr.tests.TestNgAutomation -->
    </test> <!-- Configure new eCDM system -->
    <test name="LogOut" duration-ms="245" started-at="2016-08-24T19:33:35Z" finished-at="2016-08-24T19:33:35Z">
      <class name="core.tests.BaseTest">
        <test-method status="PASS" signature="init(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, boolean, org.testng.ITestContext)[pri:0, instance:core.tests.BaseTest@3c0f93f1]" name="init" is-config="true" duration-ms="1293" started-at="2016-08-24T12:32:36Z" finished-at="2016-08-24T12:32:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[https]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sky30.lss.emc.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8443]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[org.testng.TestRunner@65a48602]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="logout(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, boolean)[pri:0, instance:core.tests.BaseTest@3c0f93f1]" name="logout" duration-ms="243" started-at="2016-08-24T12:33:35Z" finished-at="2016-08-24T12:33:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/api/v1/logout]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[application/json]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
      </class> <!-- core.tests.BaseTest -->
    </test> <!-- LogOut -->
  </suite> <!-- configTest_OVA -->
</testng-results>
